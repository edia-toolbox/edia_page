{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"EDIA","text":""},{"location":"#a-unity-xr-toolbox-for-research","title":"A Unity XR Toolbox for research","text":"<p>EDIA provides you with a set of modules (Unity packages) to facilitate the design and conduction of experimental research in XR.</p> <p>EDIA will be Open Source soon...</p> <p>We are currently resolving some legal aspects with our institution before we can publicly release the full source code. We appreciate your patience and expect to have everything ready soon.</p> <p>We\u2019re planning to launch the public alpha release early July.</p> <p>If you want to get access beforehand, please reach out to us.</p> <p></p>"},{"location":"#key-features","title":"Key features","text":"<ul> <li> <p> Structure your experiment</p> <p>Define the information for your experiment at the granularity level which you need: from sessions to blocks to trials to single steps within trials. EDIA builds upon and extends the functionalities of the UXF \u2014 Unity Experiment Framework (Brookes et al., 2020) package.</p> <p> Getting started</p> </li> <li> <p> Manage it with config files</p> <p>Use human readable config files to provide and change central information for your experiment without needing to recompile or touch your Unity code. </p> <p> Overview</p> </li> <li> <p> Unified eye tracking integration</p> <p>EDIA provides an integration of eye tracking for multiple different headsets (HTC Vive, Varjo, Meta Quest Pro, Pico), managing the parsing of the eye tracker output for you in the original sampling rate, and providing it via a standardized interface.</p> <p> EDIA Eye module</p> </li> <li> <p> Remotely control mobile XR experiments</p> <p>Control experiments which run on a mobile XR headset (e.g., Meta Quest) externally and stream what the participant is seeing.</p> <p> EDIA RCAS</p> </li> <li> <p> Automatically log relevant data</p> <p>Use pre-configured tools to log different kinds of data: behavior and movements of the participant, experimental variables, eye tracking data, ...</p> <p> Getting started</p> </li> <li> <p> Synchronize with external data</p> <p>Use the LabStreamingLayer protocol to synchronize your experiment with other data streams (e.g., EEG, fNIRS, ...).</p> <p> EDIA LSL</p> </li> </ul>"},{"location":"#getting-started","title":"Getting started","text":"<p>Read our getting started guide.</p>"},{"location":"#modules","title":"Modules","text":"EDIA Core EDIA LSL EDIA RCAS EDIA Eye EDIA Eye Submodules <ul> <li>The \ud83d\udda4 heart of the EDIA toolbox.</li> <li>Structure your experiment: <code>Sessions</code> &lt;&gt; <code>Blocks</code> &lt;&gt; <code>Trials</code> &lt;&gt; <code>Trial Steps</code></li> <li>Use logically nested Config files (JSON) to manage the compiled experiment.</li> <li>Send messages to the XR user.</li> <li>Experimenter interface.</li> </ul> <ol> <li>Use the LabStreamingLayer protocol to synchronize your data.</li> <li>The  <code>EDIA LSL</code> module is a convenience wrapper and extension of the LSL4Unity package.</li> <li>It provides prefabs and scripts which allow you to<ol> <li>Send precisely timed triggers with a single command. </li> <li>Easily stream data (eye tracking data, movement data) in world or local coordinates.</li> </ol> </li> </ol> <ol> <li>Remote Control And Streaming.</li> <li>Interface with your experiment which runs on a mobile headset.</li> <li>Load Config files from another device.</li> <li>Send commands to proceed in the experiment.</li> <li>Stream the headset view to the experimenter's device (*limited).</li> </ol> <ul> <li>Central  eye tracking package of the <code>EDIA toolbox</code>.  </li> <li>Provides a unified interface for accessing eye tracking data.  </li> <li>Example visualizations of eye tracking data: gaze, eye openness, ...  </li> <li>Interface for logging eye tracking data via <code>EDIA LSL</code> or writing it to disc.</li> </ul> <p>Separate submodules (packages) allow to parse the eye tracking data from the respective device into the unified EDIA eye tracking structure. Supported headsets:</p> <p> Meta Quest Pro</p> <p> HTC Vive Pro Eye</p> <p>  Varjo Aero</p> <p>  PICO 4 Enterprise</p>"},{"location":"#get-involved","title":"Get involved","text":"<p>If you want to use EDIA or start contributing (as soon as it is openly available), please  reach out to us.</p>"},{"location":"ThankYou/","title":"Thank you for registering.","text":""},{"location":"apiref/","title":"API reference: EDIA Core","text":"<p>Open external website.</p>"},{"location":"contact/","title":"About EDIA","text":""},{"location":"contact/#contact-us","title":"Contact us","text":"<p>If you have any questions or comments regarding <code>EDIA</code>, please reach out to us. </p> <p> edia.toolbox@gmail.com</p> <p> @ediatoolbox.bsky.social</p> <p> GitHub Discussion Board (will go public soon)</p>"},{"location":"contact/#maintainers","title":"Maintainers","text":"<p>Jeroen de Mooij \u2014 website | LinkedIn Felix Klotzsche \u2014 website | LinkedIn</p>"},{"location":"contact/#attribution","title":"Attribution","text":"<p><code>EDIA</code> was and is mainly developed and supported in the context of the MindBodyEmotion Group (led by Michael Gaebler) at the Max Planck Institute for Human Cognitive and Brain Sciences. </p>"},{"location":"gettingstarted/","title":"Getting started","text":"<p>The <code>getting started guide</code> will take you through the process of setting up a small experiment, explaining all features needed to do that with EDIA along the way.</p> <p>The guide is currently hosted on Notion. To open it full screen click here.</p>"}]}